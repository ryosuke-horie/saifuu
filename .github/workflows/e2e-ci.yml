name: E2E Tests (Self-hosted Runner)

on:
  # プルリクエストで自動実行
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'frontend/**'
      - 'api/**'
      - 'e2e/**'
      - '!frontend/**/*.md'
      - '!api/**/*.md'
      - '!e2e/**/*.md'
      - '.github/workflows/e2e-ci.yml'
  # mainブランチへのpushで実行
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'api/**'
      - 'e2e/**'
      - '!frontend/**/*.md'
      - '!api/**/*.md'
      - '!e2e/**/*.md'
      - '.github/workflows/e2e-ci.yml'
  # 手動トリガー（デバッグ用）
  workflow_dispatch:

# GitHub Actions無料枠節約のため、同一PRで複数実行時は前の実行をキャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: self-hosted
    timeout-minutes: 20
    
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      # 既存プロセスのクリーンアップ（セルフホストランナー用）
      - name: Clean up existing processes
        run: |
          echo "=== Cleaning up existing processes ==="
          echo "Checking port usage before cleanup:"
          netstat -tulpn 2>/dev/null | grep -E ":(3000|3004|5173)" || echo "No ports in use"
          
          # ポートを使用しているプロセスを強制終了
          echo "Killing processes on ports..."
          for port in 3000 3004 5173; do
            lsof -ti:$port | xargs -r kill -9 2>/dev/null && echo "Killed process on port $port" || true
          done
          
          # Next.jsとNode.jsプロセスをクリーンアップ
          echo "Killing Next.js and Node.js processes..."
          pkill -9 -f "next" || true
          pkill -9 -f "tsx" || true
          pkill -9 -f "node" || true
          
          sleep 3
          
          echo "Checking port usage after cleanup:"
          netstat -tulpn 2>/dev/null | grep -E ":(3000|3004|5173)" || echo "All ports cleared"
      
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22'
      
      - name: Clean pnpm setup directory
        run: |
          # pnpm/action-setupのデフォルトディレクトリをクリーンアップ
          rm -rf ~/setup-pnpm || true
          rm -rf /home/runner-user/setup-pnpm || true
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
      
      # ルート依存関係のインストール（共有モジュール含む）
      - name: Install root dependencies
        run: |
          export PATH="$PNPM_HOME:$PATH"
          pnpm config set store-dir /tmp/pnpm-store-${{ github.run_id }}
          pnpm install --frozen-lockfile --prefer-offline false
      
      # better-sqlite3のリビルド
      - name: Rebuild better-sqlite3
        run: |
          if [ -d "node_modules/better-sqlite3" ]; then
            cd node_modules/better-sqlite3
            npm run install --verbose || npm run build-release || node-gyp rebuild || true
            cd ../..
          fi
      
      # API依存関係のインストール
      - name: Install API dependencies
        working-directory: api
        run: |
          export PATH="$PNPM_HOME:$PATH"
          pnpm install --frozen-lockfile --prefer-offline false
      
      # Frontend依存関係のインストール
      - name: Install Frontend dependencies
        working-directory: frontend
        run: |
          export PATH="$PNPM_HOME:$PATH"
          pnpm install --frozen-lockfile --prefer-offline false
      
      # E2E依存関係のインストール
      - name: Install E2E dependencies
        working-directory: e2e
        run: |
          export PATH="$PNPM_HOME:$PATH"
          pnpm install --frozen-lockfile --prefer-offline false
      
      # E2E用データベースのセットアップ
      - name: Setup E2E Database
        working-directory: api
        run: |
          export PATH="$PNPM_HOME:$PATH"
          # データベースディレクトリを作成
          mkdir -p db
          # E2E用データベースファイルを作成
          touch db/e2e-test.db
          # E2E用の環境でマイグレーションを実行
          NODE_ENV=e2e pnpm run db:migrate:dev
      
      # APIサーバーの起動
      - name: Start API server
        working-directory: api
        run: |
          export PATH="$PNPM_HOME:$PATH"
          nohup pnpm run dev:e2e > api-server.log 2>&1 &
          echo $! > api.pid
          # ヘルスチェックを待つ
          for i in {1..30}; do
            if curl -f http://localhost:3004/api/health 2>/dev/null; then
              echo "API server is ready"
              exit 0
            fi
            echo "Waiting for API... ($i/30)"
            sleep 1
          done
          echo "API server failed to start"
          cat api-server.log
          exit 1
      
      # Frontendサーバーの起動
      - name: Start Frontend server
        working-directory: frontend
        run: |
          export PATH="$PNPM_HOME:$PATH"
          E2E_MODE=true nohup pnpm run dev > frontend-server.log 2>&1 &
          echo $! > frontend.pid
          # Frontendの準備を待つ
          for i in {1..60}; do
            if curl -f http://localhost:3000 2>/dev/null; then
              echo "Frontend server is ready"
              exit 0
            fi
            echo "Waiting for Frontend... ($i/60)"
            sleep 2
          done
          echo "Frontend server failed to start"
          cat frontend-server.log
          exit 1
      
      # E2Eテストの実行
      - name: Run E2E tests
        working-directory: e2e
        env:
          CI: true
        run: |
          export PATH="$PNPM_HOME:$PATH"
          pnpm run test --reporter=list
      
      # サーバーの停止
      - name: Stop servers
        if: always()
        run: |
          # PIDファイルからプロセスを終了
          if [ -f api/api.pid ]; then
            kill -9 $(cat api/api.pid) 2>/dev/null || true
          fi
          if [ -f frontend/frontend.pid ]; then
            kill -9 $(cat frontend/frontend.pid) 2>/dev/null || true
          fi
          # 念のためポートをクリア
          lsof -ti:3000 | xargs -r kill -9 2>/dev/null || true
          lsof -ti:3004 | xargs -r kill -9 2>/dev/null || true
      
      # テスト結果の表示（失敗時のみ）
      - name: Show test failure summary
        if: failure()
        run: |
          echo "E2E tests failed. Check the logs above for details."
          # Playwrightのテスト結果サマリーがあれば表示
          if [ -f e2e/test-results/.last-run.json ]; then
            echo "Test run summary:"
            cat e2e/test-results/.last-run.json || true
          fi
      
      # クリーンアップ
      - name: Cleanup
        if: always()
        run: |
          # プロセスのクリーンアップ（セルフホストランナー用）
          pkill -9 -f "next dev" || true
          pkill -9 -f "tsx server-e2e.js" || true
          # pnpmストアのクリーンアップ
          rm -rf /tmp/pnpm-store-${{ github.run_id }} || true
          # E2Eテスト用データベースの削除
          rm -f api/db/e2e-test.db || true