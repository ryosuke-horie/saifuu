name: Claude Code Review

on:
  issue_comment:
    types: [created]

jobs:
  claude-review:
    # PRコメントで@claudeがメンションされた場合のみ実行
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '@claude')
    
    runs-on: self-hosted
    permissions:
      contents: read
      pull-requests: write  # コメント作成のために write に変更
      issues: write        # issue_comment イベントでコメント作成に必要
      id-token: write
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # PR全体の変更を取得するため

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@v0.0.45
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          allowed_tools: "mcp__github__get_pull_request_diff"
          
          # コメントトリガーによるレビュー用のカスタム指示
          custom_instructions: |
            ユーザーから @claude メンションでレビューが要求されました。
            
            このプルリクエスト（PR）をレビューしてください。作業は次の手順に沿って進めてください：
            
            1. **変更内容を確認する:** `mcp__github__get_pull_request_diff` を使って、コードの変更点を把握します。
            2. **レビュー結果をまとめる:** すべての指摘事項を1つのコメントにまとめて、スティッキーコメントとして返答してください。

            **レビュー結果の構成:**
            
            ## 📝 コードレビュー結果
            
            ### ✅ 良い点
            - 良好な実装や設計の判断があれば簡潔に記載
            
            ### ⚠️ 改善提案
            各指摘事項について以下の形式で記載：
            
            **1. [ファイル名:行番号] 指摘の要約**
            - **問題:** 具体的な問題の説明
            - **修正案:** 
            ```言語
            // 具体的なコード例
            ```
            - **理由:** なぜこの修正が必要か
            
            ### 📌 まとめ
            - 全体的な評価とアクションアイテムの優先順位

            **レビューの観点:**
            - CLAUDE.mdのガイドラインへの準拠
            - バグやセキュリティリスクの有無
            - 保守性と可読性
            - 設計とアーキテクチャの妥当性
            - テストコードの品質とカバレッジ
            
            すべてのフィードバックは日本語で、建設的かつ実用的な内容にしてください。

          # Sticky comments を使用して同一PRへの複数回のレビューを管理
          use_sticky_comment: true